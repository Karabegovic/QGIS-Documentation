# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2012, QGIS project
# This file is distributed under the same license as the QGIS Documentation Project package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: QGIS Documentation Project 1.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-02-28 13:03\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/docs/user_manual/sextante/console.rst:8
# ecfb2b804a0640eb84cf4e2102a5736b
msgid "Using SEXTANTE from the console"
msgstr ""

#: ../../source/docs/user_manual/sextante/console.rst:11
# c2f95eebf7644c599bb68f4befe166d4
msgid "Introduction"
msgstr ""

#: ../../source/docs/user_manual/sextante/console.rst:13
# 32eeeecf5a4f4e76960ea0354a4a6907
msgid "The console allows advanced users to increase their productivity and perform complex operations that cannot be performed using any of the other elements of the SEXTANTE GUI. Models involving several algorithms can be defined using the command-line interface, and additional operations such as loops and conditional sentences can be added to create more flexible and powerful workflows."
msgstr ""

#: ../../source/docs/user_manual/sextante/console.rst:20
# 8e421d3bd9ff4e14a4cf66e1c0cd06bb
msgid "There is not a SEXTANTE console in QGIS, but all SEXTANTE commands are available instead from the QGIS built-in Python console. That means that you can incorporate those command to your console work and connect SEXTANTE algorithms to all the other features (including methods from the QGIS API) available from there."
msgstr ""

#: ../../source/docs/user_manual/sextante/console.rst:26
# 3689f6d250db4116b0aae9c6189679a0
msgid "The code that you can execute from the Python console, even if it does not call any SEXTANTE method, can be converted into a new SEXTANTE algorithm that you can later call from the toolbox, the graphical modeler or any other SEXTANTE component, just like you do with any other SEXTANTE algorithm. In fact, some algorithms that you can find in the toolbox are simple scripts."
msgstr ""

#: ../../source/docs/user_manual/sextante/console.rst:32
# 5799f40a1f864de6aeb9290e9ba0fe51
msgid "In this chapter we will see how to use SEXTANTE from the QGIS Python console, and also how to write your own algorithms using Python."
msgstr ""

#: ../../source/docs/user_manual/sextante/console.rst:36
# 9764cf099a0c4863aaef58bb07833979
msgid "Calling SEXTANTE from the Python console"
msgstr ""

#: ../../source/docs/user_manual/sextante/console.rst:38
# 389ae920c4db497bba7e1ae0e5f7b252
msgid "The first thing you have to do is to import the SEXTANTE functions with the following line:"
msgstr ""

#: ../../source/docs/user_manual/sextante/console.rst:45
# 408c9cd80e464a0183570055d1e7a75b
msgid "Now, there is basically just one (interesting) thing you can do with SEXTANTE from the console: to execute an algorithm. That is done using the ``runalg()`` method, which takes the name of the algorithm to execute as its first parameter, and then a variable number of additional parameter depending on the requirements of the algorithm. So the first thing you need to know is the name of the algorithm to execute. That is not the name you see in the toolbox, but rather a unique commandâ€“line name. To find the right name for your algorithm, you can use the ``algslist()`` method. Type the following line in you console:"
msgstr ""

#: ../../source/docs/user_manual/sextante/console.rst:55
# ce97aa2c4f60413bb86849b9f8c46247
msgid "You will see something like this."
msgstr ""

#: ../../source/docs/user_manual/sextante/console.rst:81
# ca16c09aa3434b3f9d99a611a5c0a0d6
msgid "That's a list of all the available algorithms, alphabetically ordered, along with their corresponding command-line names."
msgstr ""

#: ../../source/docs/user_manual/sextante/console.rst:84
# ede60f1734b541f2b61b4973b261fb39
msgid "You can use a string as a parameter for this method. Instead of returning the full list of algorithm, it will only display those that include that string. If, for instance, you are looking for an algorithm to calculate slope from a DEM, type ``alglist(\"slope\")`` to get the following result:"
msgstr ""

#: ../../source/docs/user_manual/sextante/console.rst:100
# 7ddf4a19b9774f48b6f24b0a9e824226
msgid "This result might change depending on the algorithms you have available."
msgstr ""

#: ../../source/docs/user_manual/sextante/console.rst:102
# 0f4fb665bde443c48db6b778f7d6ffa0
msgid "It is easier now to find the algorithm you are looking for and its command-line name, in this case *saga:slopeaspectcurvature*"
msgstr ""

#: ../../source/docs/user_manual/sextante/console.rst:105
# 6b01b1e2f66d47169d80ad3ea6126578
msgid "Once you know the command-line name of the algorithm, the next thing to do is to know the right syntax to execute it. That means knowing which parameters are needed and the order in which they have to be passed when calling the ``runalg()`` method. SEXTANTE has a method to describe an algorithm in detail, which can be used to get a list of the parameters that an algorithms require and the outputs that it will generate. To do it, you can use the ``alghelp(name_of_the_algorithm)`` method. Use the command-line name of the algorithm, not the full descriptive name."
msgstr ""

#: ../../source/docs/user_manual/sextante/console.rst:114
# 3946a14a711a49d89f90a435e0e25ef7
msgid "Calling the method with ``saga:slopeaspectcurvature`` as parameter, you get the following description."
msgstr ""

#: ../../source/docs/user_manual/sextante/console.rst:129
# fc5fa4c740364f6881503938a436323d
msgid "Now you have everything you need to run any algorithm. As we have already mentioned, there is only one single command to execute algorithms: ``runalg``. Its syntax is as follows:"
msgstr ""

#: ../../source/docs/user_manual/sextante/console.rst:138
# df633c7d33434d3ba731dadf292aa052
msgid "The list of parameters and outputs to add depends on the algorithm you want to run, and is exactly the list that the ``describealg`` method gives you, in the same order as shown."
msgstr ""

#: ../../source/docs/user_manual/sextante/console.rst:142
# 1596018898764b8ca7f595dd43505a7f
msgid "Depending on the type of parameter, values are introduced differently. The next one is a quick review of how to introduce values for each type of input parameter"
msgstr ""

#: ../../source/docs/user_manual/sextante/console.rst:146
# 3af0586483854ea0a61b0014acf89390
msgid "Raster Layer, Vector Layer or Table. Simply use a string with the name that identifies the data object to use (the name it has in the QGIS Table of Contents) or a filename (if the corresponding layer is not opened, it will be opened, but not added to the map canvas). If you have an instance of a QGIS object representing the layer, you can also pass it as parameter. If the input is optional and you do not want to use any data object, use ``None``."
msgstr ""

#: ../../source/docs/user_manual/sextante/console.rst:154
# fb8e9c4b3ba942eb99bb1eb44d953e94
msgid "Selection. If an algorithm has a selection parameter, the value of that parameter should be entered using an integer value. To know the available options, you can use the ``algoptions`` command, as shown in the following example:"
msgstr ""

#: ../../source/docs/user_manual/sextante/console.rst:171
# d4174a1096b34791b4320e86e9a58f93
msgid "In this case, the algorithm has one of such such parameters, with 7 options. Notice that ordering is zero-based."
msgstr ""

#: ../../source/docs/user_manual/sextante/console.rst:174
# f0b02f59f99345cc86c6bc0f4e7d3c90
msgid "Multiple input. The value is a string with input descriptors separated by semicolons. As in the case of single layers or tables, each input descriptor can be the data object name, or its filepath."
msgstr ""

#: ../../source/docs/user_manual/sextante/console.rst:178
# 431de6fce2454b7a8e1da10d4f95dd96
msgid "Table Field from XXX. Use a string with the name of the field to use. This parameter is case-sensitive."
msgstr ""

#: ../../source/docs/user_manual/sextante/console.rst:181
# b6c1633743fc4d778d400a60b6ffa2ec
msgid "Fixed Table. Type the list of all table values separated by commas and enclosed between quotes. Values start on the upper row and go from left to right. You can also use a 2D array of values representing the table."
msgstr ""

#: ../../source/docs/user_manual/sextante/console.rst:186
# 6a19194bbd144721baaa6fcf43a17a8d
msgid "CRS: Enter the EPSG code number of the desired CRS"
msgstr ""

#: ../../source/docs/user_manual/sextante/console.rst:188
# 89213068e9214b0b92b04b5465b43e34
msgid "Extent: You must use a string with xmin,xmax,ymin and ymax values separated by commas"
msgstr ""

#: ../../source/docs/user_manual/sextante/console.rst:191
# 32f8582f1821418a94c57a478c6e6643
msgid "Boolean, file, string and numerical parameters do not need any additional explanations."
msgstr ""

#: ../../source/docs/user_manual/sextante/console.rst:194
# 1e5eea3dd33442e985b0105740d79e5c
msgid "Input parameters such as strings booleans or numerical values have default values. To use them, use ``None`` in the corresponding parameter entry."
msgstr ""

#: ../../source/docs/user_manual/sextante/console.rst:197
# 04473a73959c4fcea629aac15ab99869
msgid "For output data objects, type the filepath to be used to save it, just as it is done from the toolbox. If you want to save the result to a temporary file, use ``None``. The extension of the file determines the file format. If you enter a file extension not included in the ones supported by the algorithm, the default file format for that output type will be used, and its corresponding extension appended to the given filepath."
msgstr ""

#: ../../source/docs/user_manual/sextante/console.rst:205
# 25005453c8b9459cb56489360502d61d
msgid "Unlike when an algorithm is executed from the toolbox, outputs are not added to the map canvas if you execute that same algorithm from the Python console. If you want to add an output to it, you have to do it yourself after running the algorithm. To do so, you can use QGIS API commands, or, even easier, use one of the handy methods provided by SEXTANTE for such task."
msgstr ""

#: ../../source/docs/user_manual/sextante/console.rst:212
# 3329f75e436c48109f0bfab839b6269d
msgid "The ``runalg`` method returns a dictionary with the output names (the ones shown in the algorithm description) as keys and the filepaths of those outputs as values. To add all the outputs generated by an algorithm, pass that dictionary to the ``loadFromAlg()`` method. You can also load an individual layer passing its filepath to the ``load()`` method."
msgstr ""

#: ../../source/docs/user_manual/sextante/console.rst:220
# 0cb5f66a9be44974b32e5d1713667c64
msgid "Creating scripts and running them from the toolbox"
msgstr ""

#: ../../source/docs/user_manual/sextante/console.rst:222
# dd98fa75085341f0bd6d9162cc8065c2
msgid "You can create your own algorithms by writing the corresponding Python code and adding a few extra lines to supply additional information needed by SEXTANTE. You can find a *Create new script* menu under the *tools* group in the script algorithms block of the toolbox. Double-click on it to open the script edition dialog. That's where you should type your code. Saving the script from there in the scripts folder (the default one when you open the save file dialog), with ``.py`` extension, will automatically create the corresponding algorithm."
msgstr ""

#: ../../source/docs/user_manual/sextante/console.rst:231
# e96d8ff5e0f746a9b73acc7d17cad7ba
msgid "The name of the algorithm (the one you will see in the toolbox) is created from the filename, removing its extension and replacing low hyphens with blank spaces."
msgstr ""

#: ../../source/docs/user_manual/sextante/console.rst:235
# 1d616220355c4dfa83bd2ef97a6828fc
msgid "Let's have the following code, which calculates the Topographic Wetness Index(TWI) directly from a DEM"
msgstr ""

#: ../../source/docs/user_manual/sextante/console.rst:249
# 4fb43416858d4be2b19d3ea3e4eb7422
msgid "As you can see, it involves 3 algorithms, all of them coming from SAGA. The last one of them calculates de TWI, but it needs a slope layer and a flow accumulation layer. We do not have these ones, but since we have the DEM, we can calculate them calling the corresponding SAGA algorithms."
msgstr ""

#: ../../source/docs/user_manual/sextante/console.rst:255
# 6b0b19f9e7144e46a12aee8786482335
msgid "The part of the code where this processing takes place is not difficult to understand if you have read the previous sections in this chapter. The first lines, however, need some additional explanation. They provide SEXTANTE the information it needs to turn your code into an algorithm that can be run from any of its components, like the toolbox or the graphical modeler."
msgstr ""

#: ../../source/docs/user_manual/sextante/console.rst:262
# 25f340e18b95416cb6d37fe5c661c26c
msgid "These lines start with a double Python comment symbol and have the following structure: *[parameter_name]=[parameter_type] [optional_values]*. Here is a list of all the parameter types that SEXTANTE supports in its scripts, their syntax and some examples."
msgstr ""

#: ../../source/docs/user_manual/sextante/console.rst:267
# e395abef8269486fa27408630c6a93d7
msgid "``raster``. A raster layer"
msgstr ""

#: ../../source/docs/user_manual/sextante/console.rst:269
# dd6fe2fae7e6453e882c6e2f0e7e95fe
msgid "``vector``. A vector layer"
msgstr ""

#: ../../source/docs/user_manual/sextante/console.rst:271
# 1952bc4f488a48adad2fa95f16d0962e
msgid "``table``. A table"
msgstr ""

#: ../../source/docs/user_manual/sextante/console.rst:273
# 5c88aafc27684d98b6e0076be37d053f
msgid "``number``. A numerical value. A default value must be provided. For instance, ``depth=number 2.4``"
msgstr ""

#: ../../source/docs/user_manual/sextante/console.rst:276
# 7d4ffa2b325f467da25d718bad4b4e89
msgid "``string``. A text string. As in the case of numerical values, a default value must be added. For instance, ``name=string Victor``"
msgstr ""

#: ../../source/docs/user_manual/sextante/console.rst:279
# 1dc36f2dc4614475ad8ae1d41c113362
msgid "``boolean``. A boolean value. Add ``True`` or ``False`` after it to set the default value. For example, ``verbose=boolean True``"
msgstr ""

#: ../../source/docs/user_manual/sextante/console.rst:282
# 4cd2cf3e22004500ad63f1a145f6997f
msgid "``multiple raster``. A set of input raster layers."
msgstr ""

#: ../../source/docs/user_manual/sextante/console.rst:284
# ef448bba0c2d424c9ab8110c2e53a4e2
msgid "``multiple vector``. A set of input vector layers."
msgstr ""

#: ../../source/docs/user_manual/sextante/console.rst:286
# 3d8fd1f0cdd7493c97ea4315925fa458
msgid "``field``. A field in the attributes table of a vector layer. The name of the layer has to be added after the ``field`` tag. For instance, if you have declared a vector input with ``mylayer=vector``, you could use ``myfield=field mylayer`` to add a field from that layer as parameter."
msgstr ""

#: ../../source/docs/user_manual/sextante/console.rst:292
# 28868da4be5c4f81aca40fd530e2b146
msgid "``folder``. A folder"
msgstr ""

#: ../../source/docs/user_manual/sextante/console.rst:294
# 7205b500e7694fb4a5e2c91bc060bfb2
msgid "``file``. A filename"
msgstr ""

#: ../../source/docs/user_manual/sextante/console.rst:296
# 862c809ce3264eaa98a09a31c631b9e2
msgid "The parameter name is the name that will be shown to the user when executing the algorithm, and also the variable name to use in the script code. The value entered by the user for that parameter will be assigned to a variable with that name."
msgstr ""

#: ../../source/docs/user_manual/sextante/console.rst:301
# e226472ea87b4ef8a24f203a80ffcb3a
msgid "When showing the name of the parameter to the user, SEXTANTE will edit it to improve its appearance, replacing low hyphens with blankspaces. So, for instance, if you want the user to see a parameter named ``A numerical value``, you can use the variable name ``A_numerical_value``"
msgstr ""

#: ../../source/docs/user_manual/sextante/console.rst:306
# 199aedb0c85641258df226a654bd9c2a
msgid "Layers and tables values are strings containing the filepath of the corresponding object. To turn them into a QGIS object, you can use the ``sextante.getObjectFromUri()`` function. Multiple inputs also have a string value, which contains the filepaths to all selected object, separated by semicolons."
msgstr ""

#: ../../source/docs/user_manual/sextante/console.rst:312
# 2e369292f9a54787b14d0e4f611882f6
msgid "Outputs are defined in a similar manner, using the following tags:"
msgstr ""

#: ../../source/docs/user_manual/sextante/console.rst:314
# ac84cde786c4434bae1193e0a18a85fd
msgid "``output raster``"
msgstr ""

#: ../../source/docs/user_manual/sextante/console.rst:316
# 9afd89698dd646598940125e40985ad3
msgid "``output vector``"
msgstr ""

#: ../../source/docs/user_manual/sextante/console.rst:318
# 0236b9a537884138930f8ececa2a1ea0
msgid "``output table``"
msgstr ""

#: ../../source/docs/user_manual/sextante/console.rst:320
# 0144d6a0421e4947a01ee773fa4eb341
msgid "``output html``"
msgstr ""

#: ../../source/docs/user_manual/sextante/console.rst:322
# 6c53ae22885f46bb9f460dd5f2353967
msgid "``output file``"
msgstr ""

#: ../../source/docs/user_manual/sextante/console.rst:324
# f9e62f861f5040989088395f13a4ccbb
msgid "``output number``"
msgstr ""

#: ../../source/docs/user_manual/sextante/console.rst:326
# 622ed5d3f0214494bf46242325d58104
msgid "``output string``"
msgstr ""

#: ../../source/docs/user_manual/sextante/console.rst:328
# 63227d5ffe73423eb440ba71a78edccf
msgid "The value assigned to the output variables is always a string with a filepath. It will correspond to a temporary filepath in case the user has not entered any output filename."
msgstr ""

#: ../../source/docs/user_manual/sextante/console.rst:332
# c629ed974cc3441da370044b3bdc567d
msgid "When you declare an output, SEXTANTE will try to add it to QGIS once the algorithm is finished. That is the reason why, although the ``runalg()`` method does not load the layers it produces, the final TWI layer will be loaded, since it is saved to the file entered by the user, which is the value of the corresponding output."
msgstr ""

#: ../../source/docs/user_manual/sextante/console.rst:338
# 1181b0dd4a4642ce8d3cfae4dfb2d4db
msgid "Do not use the ``load()`` method in your script algorithms, but just when working with the console line. If a layer is created as output of an algorithm, it should be declared as such. Otherwise, you will not be able to properly use the algorithm in the modeler, since its syntax (as defined by the tags explained above) will not match what the algorithm really creates."
msgstr ""

#: ../../source/docs/user_manual/sextante/console.rst:345
# ded3a00e2d2144b6bce2247262feaf88
msgid "Hidden outputs (numbers and strings) do not have a value. Instead, it is you who has to assign a value to them. To do so, just set the value of a variable with the name you used to declare that output. For instance, if you have used this declaration,"
msgstr ""

#: ../../source/docs/user_manual/sextante/console.rst:354
# b9d94e5640d74cda9bbad8bb4061548e
msgid "the following line will set the value of the output to 5:"
msgstr ""

#: ../../source/docs/user_manual/sextante/console.rst:360
# 0be9a55944cd4d5ca9116c4c658e742f
msgid "In addition to the tags for parameters and outputs, you can also define the group under which the algorithm will be shown, using the ``group`` tag."
msgstr ""

#: ../../source/docs/user_manual/sextante/console.rst:364
# 587695521e0642f2a570872ac31c3c08
msgid "If you algorithm takes a long time to process, it is a good idea to inform the user. You have a global named ``progress`` available, with two available methods: ``setText(text)`` and ``setPercentage(percent)`` to modify the progress text and the progress bar."
msgstr ""

#: ../../source/docs/user_manual/sextante/console.rst:369
# a80b19b74243496a995e0f5387b1e750
msgid "Several examples are provided with SEXTANTE. Please, check them to see real examples of how to create algorithms using this feature of SEXTANTE. You can right-click on any script algorithm and select *Edit script* to edit its code or just to see it."
msgstr ""

#: ../../source/docs/user_manual/sextante/console.rst:375
# 935e7394abd44e6685e05e456c40ff95
msgid "Documenting your scripts"
msgstr ""

#: ../../source/docs/user_manual/sextante/console.rst:377
# 2c17a7bbbbb84eaa91d89168bddcffe5
msgid "As in the case of models, you can create additional documentation for your script, to explain what they do and how to use them. In the script editing dialog you will find a *Edit script help* button. Click on it and it will take you to the help editing dialog. Check the chapter about the graphical modeler to know more about this dialog and how to use it."
msgstr ""

#: ../../source/docs/user_manual/sextante/console.rst:383
# fa219ad6926240e38499cd5a2b87b981
msgid "Help files are saved in the same folder as the script itself, adding the *.help* extension to the filename. Notice that you can edit your script's help before saving it for the first time. If you later close the script editing dialog without saving the script (i.e. you discard it), the help content you wrote will be lost. If your script was already saved and is associated to a filename, saving is done automatically."
msgstr ""

#: ../../source/docs/user_manual/sextante/console.rst:391
# 9dee3ccbda5b42c19f85535096607fae
msgid "Pre- and post-execution script hooks"
msgstr ""

#: ../../source/docs/user_manual/sextante/console.rst:393
# 4a7bfcb001bf42cbbbd2a0f939df7315
msgid "Script can also be used to set pre- and post-execution hooks that are run before and after an algorithm is run. This can be used to automate tasks that should be performed whenever a SEXTANTE algorithm is executed."
msgstr ""

#: ../../source/docs/user_manual/sextante/console.rst:395
# c4ff365803524377a67f3dadc02a9b28
msgid "The syntax is identical to the syntax explained above, but an additional global variable named ``alg`` is available, representing the algorithm that has just been (or is about to be) executed."
msgstr ""

#: ../../source/docs/user_manual/sextante/console.rst:397
# 9f458b5b280b402b925d14d38117550d
msgid "In the *General* group of the SEXTANTE config dialog you will find two entries named *Pre-execution script file* and *Post-execution script file* where the filename of the scripts to be run in each case can be entered."
msgstr ""

#: ../../source/docs/user_manual/sextante/console.rst:399
# afc6349bba244e04bf498b5287dd34f0
msgid "The following script is an example of a post-execution hook that, whenever an algorithm generates a raster layer, adds overviews (pyramids) to it."
msgstr ""

#: ../../source/docs/user_manual/sextante/console.rst:402
# 910ef7121bfb4c82b5d2ba0e11ab426d
msgid "XXXXXXXXXXXXXXXXXXXX"
msgstr ""

