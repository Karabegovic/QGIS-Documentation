# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2012, QGIS project
# This file is distributed under the same license as the QGIS Documentation Project package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: QGIS Documentation Project 1.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-02-28 13:03\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:12
# cda84e92347c493a975269fcc59a7e8f
msgid "QGIS Server"
msgstr ""

#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:14
# 9de59eb6c9384ac6b8fdf300efebe573
msgid "QGIS Server is an open source WMS 1.3 and WFS 1.0.0 implementation which, in addition, implements advanced cartographic features for thematic mapping. The QGIS Server is a FastCGI/CGI (Common Gateway Interface) application written in C++ that works together with a webserver (e.g. Apache, Lighttpd). It is funded by the EU projects Orchestra, Sany and the city of Uster in Switzerland."
msgstr ""

#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:22
# 1fbbb1e129dd45fbb2d347fd422f0d44
msgid "It uses QGIS as backend for the GIS logic and for map rendering. Furthermore the Qt library is used for graphics and for platform independent C++ programming. In contrast to other WMS software, the QGIS Server uses cartographic rules as a configuration language, both for the server configuration and for the user-defined cartographic rules."
msgstr ""

#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:30
# 3d721f0d67714bf395b7156c94430287
msgid "Moreover, the QGIS Server project provides the 'Publish to Web' plugin, a plugin for QGIS desktop which exports the current layers and symbology as a web project for QGIS Server (containing cartographic visualization rules expressed in SLD)."
msgstr ""

#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:35
# 875e31a7f1dd42d3ace11af54ae15929
msgid "As QGIS desktop and QGIS Server use the same visualization libraries, the maps that are published on the web look the same as in desktop GIS. The Publish to Web plugin currently supports basic symbolization, with more complex cartographic visualization rules introduced manually. As the configuration is performed with the `SLD standard <http://www.opengeospatial.org/standards/sld>`_ and its documented extensions, there is only one standardised language to learn, which greatly simplifies the complexity of creating maps for the Web."
msgstr ""

#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:43
# c3ed1f671f004ee1adcdbecd21a4c8a0
msgid "In one of the following manuals we will provide a sample configuration to set up a QGIS Server. But for now we recommend to read one of the following URLs to get more information:"
msgstr ""

#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:47
# c3c37a0bd4e84909aeba71d235bdc9d5
msgid "http://karlinapp.ethz.ch/qgis_wms/"
msgstr ""

#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:48
# 5ce1177873f34f75b1929e859fc1bd99
msgid "http://www.qgis.org/wiki/QGIS_mapserver_tutorial"
msgstr ""

#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:49
# a88896d0e5b74928b23e76c871ea83e1
msgid "http://linfiniti.com/2010/08/qgis-mapserver-a-wms-server-for-the-masses/"
msgstr ""

#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:54
# 5dc1d9a00f9d4941920daf0c0a66fc63
msgid "Sample installation on Debian Squeeze"
msgstr ""

#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:56
# 63cd2b5dff8b4422b56df713e3e0a168
msgid "At this point we will give a short and simple sample installation howto for Debian Squeeze. Many other OS provide packages for QGIS Server, too. If you have to build it all from source, please refer to the URLs above."
msgstr ""

#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:60
# 7b85a0cc51d1478eafbfc9291628a6bb
msgid "Apart from qgis and qgis-mapserver you need a webserver, in our case apache2. You can install all packages with aptitude or apt-get install together with other necessary dependency packages. After installation you should test, if the webserver and qgis server works as expected. Make sure the apache server is running with ``/etc/init.d/apache2 start``. Open a web browser and type URL: ``http://localhost``. If apache is up, you should see the message 'It works!'."
msgstr ""

#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:69
# 16c1707836314cc6a7e051c39bfd2a02
msgid "Now we test the qgis server installation. The :file:`qgis_mapserv.fcgi` is available at ``/usr/lib/cgi-bin/qgis_mapserv.fcgi`` and provides a standard wms that shows the state boundaries of Alaska. Add the WMS with the URL ``http://localhost/cgi-bin/qgis_mapserv.fcgi`` as described in :ref:`ogc-wms-servers`."
msgstr ""

#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:90
# e14147300bf748fabf106325b6fe1d40
msgid "Creating a WMS/WFS from a QGIS project"
msgstr ""

#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:92
# f43564a09dbb4993a8522c5ebae807a2
msgid "To provide a new qgis wms/wfs server we have to create a qgis project file with some data. Here we use the 'alaska' shapefile from the qgis_sample_dataset. Define the colors and styles of the layers in QGIS and define the project CRS, if not already done."
msgstr ""

#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:109
# a2ec55134ed046b3954e8a20241f7de2
msgid "Then open the ``OWS Server`` tab in the menu :menuselection:`Settings --> Project Properties` and define the general fields under 'Service Capabilities'. For ``WMS Capabilities`` define 'Coordinate System Restrictions' and 'Advertised Extend'. Additionally you can enable the checkbox |checkbox| :guilabel:`Add WKT geometry to feature into response` to make the layers queryable and add a Maximum width and height that can be requested. For ``WFS Capabilities`` you only need to select the layers that you want to provide as WFS. Now save the session in a project file :file:`alaska.qgs`. To provide the project as a WMS/WFS, we create a new folder ``/usr/lib/cgi-bin/project`` with admin privileges and add the project file :file:`alaska.qgs` and a copy of the :file:`qgis\\_mapserv.fcgi` file - that's all."
msgstr ""

#: ../../source/docs/user_manual/working_with_ogc/ogc_server_support.rst:121
# aea1f8f0573e4de3a439a900efaa4050
msgid "Now we test our project WMS and WFS, add the WMS and WFS as described in :ref:`ogc-wms-layers` and :ref:`ogc-wfs` to QGIS and load the WMS. The URL is:"
msgstr ""

