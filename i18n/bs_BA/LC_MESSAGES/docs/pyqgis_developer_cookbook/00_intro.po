# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2012, QGIS project
# This file is distributed under the same license as the QGIS Documentation Project package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: QGIS Documentation Project 1.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-02-28 13:03\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/docs/pyqgis_developer_cookbook/00_intro.rst:9
# 691343cffa69495491ddeddbcd761e30
msgid "Introduction"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/00_intro.rst:11
# f7f8c5173ff140019a03f669763f9e4a
msgid "This document is intended to work both as a tutorial and a reference guide. While it does not list all possible use cases, it should give a good overview of the principal functionality."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/00_intro.rst:15
# 145faa78c9064230b304850d83b2461e
msgid "Starting from 0.9 release, QGIS has optional scripting support using Python language. We've decided for Python as it's one of the most favourite languages for scripting. PyQGIS bindings depend on SIP and PyQt4. The reason for using SIP instead of more widely used SWIG is that the whole QGIS code depends on Qt libraries. Python bindings for Qt (PyQt) are done also using SIP and this allows seamless integration of PyQGIS with PyQt."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/00_intro.rst:25
# f144df68a139455d857c11c255809f0f
msgid "**TODO:**"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/00_intro.rst:24
# 8e042d5859874303ae5172660e7d1ad3
msgid "Getting PyQGIS to work (Manual compilation, Troubleshooting)"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/00_intro.rst:27
# 9708b9051fa1434393ed6bd4c114c5fd
msgid "There are several ways how to use QGIS python bindings, they are covered in detail in the following sections:"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/00_intro.rst:30
# c8b0f9911f404f388c7349c3f154bb6b
msgid "issue commands in Python console within QGIS"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/00_intro.rst:31
# 1efcd387bf70480ab9a39cbe15ee3824
msgid "create and use plugins in Python"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/00_intro.rst:32
# 4b3a66ff7b604014b9371baad8adeb9c
msgid "create custom applications based on QGIS API"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/00_intro.rst:36
# 1eb161480a844628880058e09b062579
msgid "There is a `complete QGIS API <http://qgis.org/api/>`_ reference that documents the classes from the QGIS libraries. Pythonic QGIS API is nearly identical to the API in C++."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/00_intro.rst:40
# d35f900933684d268d38412d4f0cc8f0
msgid "There are some resources about programming with PyQGIS on `QGIS blog <http://blog.qgis.org/>`_. See `QGIS tutorial ported to Python <http://blog.qgis.org/?q=node/59>`_ for some examples of simple 3rd party apps. A good resource when dealing with plugins is to download some plugins from `plugin repository <http://plugins.qgis.org/>`_ and examine their code."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/00_intro.rst:50
# ba0a212ddf7b4ba99ef758a27e2c274a
msgid "Python Console"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/00_intro.rst:52
# dfc219a196c94a128a62ff6fcd4c2940
msgid "For scripting, it is possible to take advantage of integrated Python console. It can be opened from menu: :menuselection:`Plugins --> Python Console`. The console opens as a non-modal utility window:"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/00_intro.rst:62
# dcc6638565f14177a14cbcca285cde98
msgid "The screenshot above illustrates how to get the layer currntly selected in the layer list, show its ID and optionally, if it is a vector layer, show the feature count. For interaction with QGIS environment, there is :data:`qgis.utils.iface` variable, which is instance of :class:`QgisInterface`. This interface allows access to the map canvas, menus, toolbars and other parts of the QGIS application."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/00_intro.rst:69
# f555064b1916439ab906f7005393f952
msgid "For convenience of the user, the following statements are executed when the console is started (in future it will be possible to set further initial commands)::"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/00_intro.rst:76
# ee876a28744743488948b5da294282ed
msgid "For those which use the console often, it may be useful to set a shortcut for triggering the console (within menu :menuselection:`Settings --> Configure shortcuts...`)"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/00_intro.rst:83
# f42426a20dff4c35824db04b9065d879
msgid "Python Plugins"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/00_intro.rst:85
# 84a490bcfbc84aa5bd6f2010bf5819d6
msgid "Quantum GIS allows enhancement of its functionality using plugins. This was originally possible only with C++ language. With the addition of Python support to QGIS, it is also possible to use plugins written in Python. Great advantages over C++ plugins is the simplicity of distribution (no compiling for each platform needed) and easier development."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/00_intro.rst:91
# 2bb0992d16a94bbbbed42a0a6377e8e7
msgid "Many plugins covering various functionality have been written since the introduction of Python support. Plugin installer allows users to easily fetch, upgrade and remove Python plugins. See `Python Plugin Repositories <http://www.qgis.org/wiki/Python_Plugin_Repositories>`_ page for various sources of plugins."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/00_intro.rst:97
# b9a5c58e3f8d4ee5a887376fe52daee2
msgid "Creating plugins in Python is simple, see :ref:`developing_plugins` for detailed instructions."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/00_intro.rst:104
# b90787ad01ad40de80a3949bb20c1f0a
msgid "Python Applications"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/00_intro.rst:106
# 9c1acce1546941449a4f02052ec3496a
msgid "Often when processing some GIS data, it is handy to create some scripts for automating the process instead of doing the same task again and again. With PyQGIS, this is perfectly possible --- import the :mod:`qgis.core` module, initialize it and you are ready for the processing."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/00_intro.rst:111
# 79bde12ef6a1412ab24b65d3e4840831
msgid "Or you may want to create an interactive application that uses some GIS functionality --- measure some data, export a map in PDF or any other functionality. The :mod:`qgis.gui` module additionally brings various GUI components, most notably the map canvas widget that can be very easily incorporated into the application with support for zooming, panning and/or any further custom map tools."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/00_intro.rst:120
# 4f1ff6a8b44b4afb9efd3f5a2d1f4303
msgid "Using PyQGIS in custom application"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/00_intro.rst:122
# 30d61b1db567416c943f235ab31968f5
msgid "Note: do *not* use :file:`qgis.py` as a name for your test script --- Python will not be able to import the bindings as the script's name will shadow them."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/00_intro.rst:125
# a4b4c073f0bd4355b6c0e749dab37b8f
msgid "First of all you have to import qgis module, set QGIS path where to search for resources --- database of projections, providers etc. When you set prefix path with second argument set as :const:`True`, QGIS will initialize all paths with standard dir under the prefix directory. Calling :func:`initQgis` function is important to let QGIS search for the available providers."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/00_intro.rst:141
# 97c19f88fe624d9794a79eb7e54cc504
msgid "Now you can work with QGIS API --- load layers and do some processing or fire up a GUI with a map canvas. The possibilities are endless :-)"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/00_intro.rst:144
# c70ad2bfad6b40ba9cfea82b71067a82
msgid "When you are done with using QGIS library, call :func:`exitQgis` to make sure that everything is cleaned up (e.g. clear map layer registry and delete layers)::"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/00_intro.rst:154
# f94b5f7276bc48fe8c00c8da0639072c
msgid "Running Custom Applications"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/00_intro.rst:156
# 62aa489ca5f64e1992fa2228f4f6c0bf
msgid "You will need to tell your system where to search for QGIS libraries and appropriate Python modules if they are not in a well-known location --- otherwise Python will complain::"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/00_intro.rst:163
# ae569e07636e44ce9882f9aa40711d2e
msgid "This can be fixed by setting the ``PYTHONPATH`` environment variable. In the following commands, ``qgispath`` should be replaced with your actual QGIS installation path:"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/00_intro.rst:167
# 643f7bb6ec14448abb3c7504bbd3bd40
msgid "on Linux: :command:`export PYTHONPATH=/qgispath/share/qgis/python`"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/00_intro.rst:168
# 96fbb07fad8c4201a67a9eb005999b44
msgid "on Windows: :command:`set PYTHONPATH=c:\\\\qgispath\\\\python`"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/00_intro.rst:170
# ce6a51ea0c43465296d25c35fd91dd6e
msgid "The path to the PyQGIS modules is now known, however they depend on ``qgis_core`` and ``qgis_gui`` libraries (the Python modules serve only as wrappers). Path to these libraries is typically unknown for the operating system, so you get an import error again (the message might vary depending on the system)::"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/00_intro.rst:178
# ff37a7263285458ebf6defc4636f6e1b
msgid "Fix this by adding the directories where the QGIS libraries reside to search path of the dynamic linker:"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/00_intro.rst:181
# 56dbdadee63e493b8a0666965777c33c
msgid "on Linux: :command:`export LD_LIBRARY_PATH=/qgispath/lib`"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/00_intro.rst:182
# deaa7be356b24db7932998eab67a38c1
msgid "on Windows: :command:`set PATH=C:\\\\qgispath;%PATH%`"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/00_intro.rst:184
# 1cd446fd7a004b0293bd8ca8e7fdeb93
msgid "These commands can be put into a bootstrap script that will take care of the startup. When deploying custom applications using PyQGIS, there are usually two possibilities:"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/00_intro.rst:188
# 42212dc57f004c8d9d494c21c280e69a
msgid "require user to install QGIS on his platform prior to installing your application. The application installer should look for default locations of QGIS libraries and allow user to set the path if not found. This approach has the advantage of being simpler, however it requires user to do more steps."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/00_intro.rst:194
# 7afa89b3f5664669aac62495f8f1ee51
msgid "package QGIS together with your application. Releasing the application may be more challenging and the package will be larger, but the user will be saved from the burden of downloading and installing additional pieces of software."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/00_intro.rst:199
# a9ce25431d8d4fd9b316e39d021cf183
msgid "The two deployment models can be mixed - deploy standalone application on Windows and Mac OS X, for Linux leave the installation of QGIS up to user and his package manager."
msgstr ""

